name: Node.js CI Merge Master

on:
  push:
    branches: ["master"]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCES_KEY }}
          aws-region: us-east-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: docker_nodejs_demo
          IMAGE_TAG: nodejs_demo_image
        run: |
          docker build -t 925199373191.dkr.ecr.us-east-2.amazonaws.com/poi-twitter-adapter:latest .
          docker push 925199373191.dkr.ecr.us-east-2.amazonaws.com/poi-twitter-adapter:latest
      - name: SSH into EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          port: 22
          script: |
            aws --profile default configure set AWS_ACCESS_KEY_ID ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
            aws --profile default configure set AWS_SECRET_ACCESS_KEY ${{ secrets.AWS_ECR_SECRET_ACCES_KEY }}
            aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 925199373191.dkr.ecr.us-east-2.amazonaws.com
            docker stop poi-twitter-adapter || true
            docker rm poi-twitter-adapter || true
            docker pull 925199373191.dkr.ecr.us-east-2.amazonaws.com/poi-twitter-adapter:latest
            docker run -d --name poi-twitter-adapter --network docker-network -p 8080:8080 \
              925199373191.dkr.ecr.us-east-2.amazonaws.com/poi-twitter-adapter:latest

